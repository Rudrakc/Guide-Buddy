"{\"sections\":[{\"sectionTitle\":\"Web Technology References\",\"questions\":[{\"question\":\"Which language is described as the general-purpose scripting language in the MDN Web Docs?\",\"choices\":[\"HTML\",\"CSS\",\"JavaScript\",\"HTTP\"],\"correctAnswer\":\"JavaScript\"},{\"question\":\"What does the 'Web APIs' section refer to in the MDN Web Docs?\",\"choices\":[\"Web browser extensions\",\"Document styling\",\"General web technologies\",\"Interfaces for building web applications\"],\"correctAnswer\":\"Interfaces for building web applications\"}]},{\"sectionTitle\":\"Guides\",\"questions\":[{\"question\":\"What does the 'MDN Learning Area' focus on?\",\"choices\":[\"Developing web browser extensions\",\"Learning web development\",\"Browser compatibility updates\",\"Testing and sharing code\"],\"correctAnswer\":\"Learning web development\"},{\"question\":\"Which topic is covered for making the web accessible?\",\"choices\":[\"HTML\",\"JavaScript\",\"Accessibility\",\"Web Extensions\"],\"correctAnswer\":\"Accessibility\"}]},{\"sectionTitle\":\"Promise Object\",\"questions\":[{\"question\":\"What are the three states a JavaScript Promise can be in?\",\"choices\":[\"Pending, Fulfilled, Stalled\",\"Pending, Fulfilled, Rejected\",\"Started, Completed, Failed\",\"Open, Closed, Waiting\"],\"correctAnswer\":\"Pending, Fulfilled, Rejected\"},{\"question\":\"Which method would you use if you want to take action only after a promise is settled, regardless of whether it was fulfilled or rejected?\",\"choices\":[\"Promise.prototype.then\",\"Promise.prototype.catch\",\"Promise.prototype.finally\",\"Promise.constructor\"],\"correctAnswer\":\"Promise.prototype.finally\"}]},{\"sectionTitle\":\"Chained Promises\",\"questions\":[{\"question\":\"What is a key characteristic of the 'then' method in promise chains?\",\"choices\":[\"It only deals with rejected promises\",\"It can handle both fulfilled and rejected promises\",\"It is used exclusively for catching errors\",\"It terminates the chain\"],\"correctAnswer\":\"It can handle both fulfilled and rejected promises\"},{\"question\":\"In promise chaining, if the fulfillment handler returns a non-thenable value, what will be the settled state of the new promise?\",\"choices\":[\"Fulfilled with the returned value\",\"Rejected with an error\",\"Depends on the initial promise\",\"Returned to the initial state\"],\"correctAnswer\":\"Fulfilled with the returned value\"}]},{\"sectionTitle\":\"Promise Concurrency\",\"questions\":[{\"question\":\"Which Promise method fulfills when any of the input promises fulfills?\",\"choices\":[\"Promise.all()\",\"Promise.allSettled()\",\"Promise.any()\",\"Promise.race()\"],\"correctAnswer\":\"Promise.any()\"},{\"question\":\"What is required for a class to be able to use promise methods like Promise.all() with a subclass type?\",\"choices\":[\"It must be declared as a native JavaScript type\",\"It must implement the resolve static method\",\"It must be single-threaded\",\"It must use deprecated properties\"],\"correctAnswer\":\"It must implement the resolve static method\"}]},{\"sectionTitle\":\"Examples and Advanced Usage\",\"questions\":[{\"question\":\"What tool is used in the advanced promise example to simulate asynchronism?\",\"choices\":[\"XHR\",\"fetch API\",\"setTimeout()\",\"Promise.resolve()\"],\"correctAnswer\":\"setTimeout()\"},{\"question\":\"In the advanced example, why is 'throw' used in the troubleWithGetNumber function?\",\"choices\":[\"To ensure the error is properly handled in the chain\",\"To initiate a new promise\",\"To always resolve the current promise\",\"To switch between pending states\"],\"correctAnswer\":\"To ensure the error is properly handled in the chain\"}]}]}"